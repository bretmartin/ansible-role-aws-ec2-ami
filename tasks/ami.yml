---

- name: >-
    gather facts about temporary instance for '{{ instance.ami_shortname }}' AMI
  ec2_remote_facts:
    filters:
      instance-state-name: ['running']
      'tag:Name':        '{{ instance.hostname }}'
      'tag:Environment': 'ami'
      'tag:Function':    '{{ instance.function }}'
    profile: '{{ aws_profile }}'
    region: '{{ aws_region }}'
  register: _aws_ec2_ami_instance_facts

- name: wait for RDP or SSH accessibility
  wait_for:
    port: '{{ ("3389"
               if instance.ami_platform == "windows"
               else "22") }}'
    host: '{{ _aws_ec2_ami_instance_facts.instances.0.private_ip_address }}'
    timeout: 600

- name: create AMI
  ec2_ami:
    profile: '{{ aws_profile }}'
    instance_id: '{{ _aws_ec2_ami_instance_facts.instances.0.id }}'
    region: '{{ aws_region }}'
    state: present
    description: '{{ instance.ami_description }}'
    name: '{{ instance.ami_name }}'
    tags:
      Source AMI ID: '{{ instance.image }}'
      To Encrypt: '{{ ("True" if instance.ami_kms_key_alias else "False") }}'
      KMS Key Alias: '{{ instance.ami_kms_key_alias | default(None) }}'
  register: _aws_ec2_ami_create

- name: save unencrypted AMI creation data
  set_fact:
    _aws_ec2_ami_unencrypted_amis: >-
      {{ _aws_ec2_ami_unencrypted_amis
         | default([])
         | union([_aws_ec2_ami_create]) }}

- name: call optional notifier
  include: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: started creating AMI <b>{{ instance.ami_shortname }}</b>
  when: notifier_role is defined
