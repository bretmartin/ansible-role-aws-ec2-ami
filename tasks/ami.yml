---

- name: wait for stopped instance for '{{ instance.ami_shortname }}' AMI
  ec2_instance_facts:
    profile:        '{{ aws_profile }}'
    aws_access_key: '{{ aws_iam_assume_role_access_key    | default(omit) }}'
    aws_secret_key: '{{ aws_iam_assume_role_secret_key    | default(omit) }}'
    security_token: '{{ aws_iam_assume_role_session_token | default(omit) }}'

    filters:
      instance-state-name: ['stopped']
      'tag:Name':        '{{ instance.hostname }}'
      'tag:Environment': 'ami'
      'tag:Function':    '{{ instance.function }}'
    region: '{{ aws_region }}'
  register: _aws_ec2_ami_instance_facts
  until: _aws_ec2_ami_instance_facts.instances | length == 1
  retries: 120
  delay: 15

- name: call optional notifier
  include_tasks: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: >
      found stopped temporary instance for AMI <b>{{ instance.ami_shortname }}</b>
  when: notifier_role is defined

- name: create AMI
  ec2_ami:
    profile:        '{{ aws_profile }}'
    aws_access_key: '{{ aws_iam_assume_role_access_key    | default(omit) }}'
    aws_secret_key: '{{ aws_iam_assume_role_secret_key    | default(omit) }}'
    security_token: '{{ aws_iam_assume_role_session_token | default(omit) }}'

    instance_id: '{{ _aws_ec2_ami_instance_facts.instances.0.instance_id }}'
    region: '{{ aws_region }}'
    state: present
    description: '{{ instance.ami_description }}'
    name: '{{ instance.ami_name }}'
    tags:
      Short Name: '{{ instance.ami_shortname }}'
      Source AMI ID: '{{ instance.image }}'
      To Encrypt: '{{ ("True" if instance.ami_kms_key_alias else "False") }}'
      KMS Key Alias: '{{ instance.ami_kms_key_alias | default(None) }}'
  register: _aws_ec2_ami_create

- name: save unencrypted AMI creation data
  set_fact:
    _aws_ec2_ami_unencrypted_amis: >-
      {{ _aws_ec2_ami_unencrypted_amis
         | default([])
         | union([_aws_ec2_ami_create]) }}

- name: call optional notifier
  include_tasks: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: started creating AMI <b>{{ instance.ami_shortname }}</b>
  when: notifier_role is defined
